<?php
/**
 * Structure_Rapidmail class
 *
 * @package APIAPI\Structure_Billomat
 * @since   1.0.0
 */

namespace APIAPI\Structure_Rapidmail;

use APIAPI\Core\Structures\Structure;
use APIAPI\Core\Request\Method;

if ( ! class_exists( 'APIAPI\Structure_Rapidmail\Structure_Rapidmail' ) ) {

	/**
	 * Structure implementation for Rapidmail.
	 *
	 * @since 1.0.0
	 */
	class Structure_Rapidmail extends Structure {
		/**
		 * Sets up the API structure.
		 * This method should populate the routes array, and can also be used to
		 * handle further initialization functionality, like setting the authenticator
		 * class and default authentication data.
		 *
		 * @since 1.0.0
		 */
		protected function setup() {
			$this->title         = 'Rapidmail API';

			$this->description   = 'Allows to access and manage the data in your Rapidmail account.';
			$this->base_uri      = 'https://apiv3.emailsys.net/v1/';

			$this->authenticator = 'basic';

			$this->routes['/apiusers'] = array(
				'methods' => array(
					Method::GET  => array(
						'description'          => 'Gets a Token.',
						'needs_authentication' => true,
						'request_data_type'    => 'json',
						'params'               => array(
							'page'        => array(
								'description' => 'Page to load',
								'type'        => 'integer',
							)
						)
					),
					Method::POST => array(
						'description'          => 'Creates a Rapidmail user.',
						'needs_authentication' => true,
						'request_data_type'    => 'json',
						'params'               => array(
							'id'                  => array(
								'description' => 'User Id',
								'type'        => 'integer'
							),
							'username'            => array(
								'description' => 'Authentication username, will be autogenerated on creation',
								'type'        => 'string'
							),
							'password'            => array(
								'description' => 'Authentication password, will be autogenerated on creation',
								'type'        => 'string'
							),
							'description'         => array(
								'description' => 'User description',
								'type'        => 'string'
							),
							'authentication_type' => array(
								'description' => 'Authentication type used for API user. Please note that setting authentication_type to “key” will currently only result in a usable user if a default authentication key has been configured for the whitelabel.',
								'type'        => 'string'
							),
							'created'             => array(
								'description' => 'Creation time (format YYYY-MM-DD H:i:s)',
								'type'        => 'string'
							),
						)
					),
					Method::GET  => array(
						'description'          => 'Get a Rapidmail user',
						'needs_authentication' => true,
						'request_data_type'    => 'json',
						'params'               => array(
							'id'                  => array(
								'description' => 'User Id',
								'type'        => 'integer'
							),
							'username'            => array(
								'description' => 'Username',
								'type'        => 'string'
							),
							'password'            => array(
								'description' => 'Password',
								'type'        => 'string'
							),
							'description'         => array(
								'description' => 'User description',
								'type'        => 'string'
							),
							'authentication_type' => array(
								'description' => 'Authentication type (default "password")',
								'type'        => 'string'
							),
							'created'             => array(
								'description' => 'Creation time (format YYYY-MM-DD H:i:s)',
								'type'        => 'string'
							),

						)
					)
				)
			);

			$this->routes['/recipientlists'] = array(
				'methods' => array(
					Method::GET  => array(
						'description'          => 'Get recipient lists.',
						'needs_authentication' => true,
						'request_data_type'    => 'json',
						'params'               => array(
							'page'        => array(
								'description' => 'Page to load',
								'type'        => 'integer',
							),
						),
					),
					Method::POST => array(
						'description'          => 'Creates a Rapidmail user.',
						'needs_authentication' => true,
						'request_data_type'    => 'json',
						'params'               => array(
							'id'                      => array(
								'description' => 'User Id (readOnly: true)',
								'type'        => 'integer'
							),
							'name'                    => array(
								'description' => 'Name of the recipientlist (maxLength: 100)',
								'type'        => 'string'
							),
							'description'             => array(
								'description' => 'Description of recipientlist (maxLength: 10000)',
								'type'        => 'integer'
							),
							'unsubscribe_blacklist'   => array(
								'description' => 'Specify if recipients should be blacklisted upon unsubscription (example: yes, no)',
								'type'        => 'string'
							),
							'recipient_subscribe_email'   => array(
								'description' => 'Specify if a welcome email should be sent on subscribe (example: yes, no)',
								'type'        => 'string'
							),
							'subscribe_confirmation_email_from'   => array(
								'description' => 'From email address to use for recipientlist double-opt-in message (maxLength: 255)',
								'type'        => 'string'
							),
							'subscribe_confirmation_email_subject'   => array(
								'description' => 'Subject to use for recipientlist double-opt-in message (maxLength: 255)',
								'type'        => 'string'
							),
							'subscribe_confirmation_email_from_name'   => array(
								'description' => 'From name to use for recipientlist double-opt-in message',
								'type'        => 'string'
							),
							'subscribe_confirmation_email_body'   => array(
								'description' => 'Text message body to use for recipientlist double-opt-in message (maxLength: 1500)',
								'type'        => 'string'
							),
							'subscribe_confirmation_email_body_html'   => array(
								'description' => 'HTML message body to use for recipientlist double-opt-in message (maxLength: 30000)',
								'type'        => 'string'
							),
							'subscribe_confirmation_welcome_email_from'   => array(
								'description' => 'From email address to use for recipientlist welcome message (maxLength: 255)',
								'type'        => 'string'
							),
							'subscribe_confirmation_welcome_email_from_name'   => array(
								'description' => 'From name to use for recipientlist welcome message (maxLength: 255)',
								'type'        => 'string'
							),
							'subscribe_confirmation_welcome_email_subject'   => array(
								'description' => 'Subject to use for recipientlist welcome message (maxLength: 255)',
								'type'        => 'string'
							),
							'subscribe_confirmation_welcome_email_body'   => array(
								'description' => 'Text message body to use for recipientlist welcome message (maxLength: 1500)',
								'type'        => 'string'
							),
							'subscribe_confirmation_welcome_email_body_html'   => array(
								'description' => 'HTML message body to use for recipientlist welcome message (maxLength: 30000)',
								'type'        => 'string'
							),
							'unsubscribe_confirmation_email_from'   => array(
								'description' => 'From email address to use for recipientlist double-opt-out message (maxLength: 255)',
								'type'        => 'string'
							),
							'unsubscribe_confirmation_email_from_name'   => array(
								'description' => 'From name to use for recipientlist double-opt-out message (maxLength: 255)',
								'type'        => 'string'
							),
							'unsubscribe_confirmation_email_subject'   => array(
								'description' => 'Subject to use for recipientlist double-opt-out message (maxLength: 255)',
								'type'        => 'string'
							),
							'unsubscribe_confirmation_email_body'   => array(
								'description' => 'Text message body to use for recipientlist double-opt-out message (maxLength: 1500)',
								'type'        => 'string'
							),
							'unsubscribe_confirmation_email_body_html'   => array(
								'description' => 'HTML nessage body to use for recipientlist goodbye message (maxLength: 30000)',
								'type'        => 'string'
							),
							'subscribe_form_url'   => array(
								'description' => 'URL of subscription form (readOnly: true)',
								'type'        => 'string'
							),
							'subscribe_form_field_key'   => array(
								'description' => 'Field name for honeypot field (readOnly: true)',
								'type'        => 'string'
							),
							'unsubscribe_form_url'   => array(
								'description' => 'URL of unsubscription form (readOnly: true)',
								'type'        => 'string'
							),
							'default'   => array(
								'description' => 'Set recipientlist as default (example: yes, no)',
								'type'        => 'string'
							),
							'created'   => array(
								'description' => 'Created datetime (example: 2017-01-01 12:00:00, readOnly: true)',
								'type'        => 'string'
							),
							'updated'   => array(
								'description' => 'Last modified datetime (example: 2017-01-01 12:00:00, readOnly: true)',
								'type'        => 'string'
							),
						),
					),
				)
			);
		}
	}
}
